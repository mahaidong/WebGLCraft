// Generated by CoffeeScript 2.7.0
(function() {
  this.Blocks = [
    "cobblestone",
    "plank",
    "brick",
    "diamond",
    "glowstone",
    "obsidian",
    "whitewool",
    "bluewool",
    "redwool",
    // "netherrack",
    "one"
  ];

  this.BlockSelection = class BlockSelection {
    constructor(game) {
      this.game = game;
      this.current = "cobblestone";
    }

    blockImg(name) {
      return `<img width='32' height='32' src='./textures/${name}icon.png' id='${name}'/>`;
    }

    mousedown(e) {
      if (e.target === this) {
        return false;
      }
      this.select(e.target.id);
      return false;
    }

    mousewheel(delta) {
      var dif, index;
      dif = (delta >= 0 ? 1 : -1);
      index = (Blocks.indexOf(this.current) - dif).mod(Blocks.length);
      return this.select(Blocks[index]);
    }

    ligthUp(target) {
      return this._setOpacity(target, 0.8);
    }

    lightOff(target) {
      return this._setOpacity(target, 1);
    }

    select(name) {
      if (this.current === name) {
        return;
      }
      this.game.selectCubeBlock(name);
      this.ligthUp(name);
      this.lightOff(this.current);
      return this.current = name;
    }

    _setOpacity(target, val) {
      return $("#" + target).css({
        opacity: val
      });
    }

    insert() {
      var b, blockList, domElement;
      blockList = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = Blocks.length; i < len; i++) {
          b = Blocks[i];
          results.push(this.blockImg(b));
        }
        return results;
      }).call(this);
      domElement = $("#minecraft-blocks");
      domElement.append(blockList.join(''));
      this.ligthUp(this.current);
      domElement.mousedown((e) => {
        return this.mousedown(e);
      });
      $(document).mousewheel((e, delta) => {
        return this.mousewheel(delta);
      });
      return domElement.show();
    }

  };

}).call(this);

//# sourceMappingURL=blockSelection.js.map
